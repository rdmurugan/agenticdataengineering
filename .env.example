# Healthcare Data Platform Environment Variables
# Copy this file to .env and update with your actual values

# Databricks Configuration
DATABRICKS_TOKEN=dapi-your-token-here
DATABRICKS_WORKSPACE_ID=your-workspace-id
DATABRICKS_HOST=https://your-workspace.cloud.databricks.com

# AWS Configuration (if using AWS)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key  
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=healthcare-data-platform

# Azure Configuration (if using Azure)
AZURE_TENANT_ID=your-azure-tenant-id
AZURE_CLIENT_ID=your-azure-client-id
AZURE_CLIENT_SECRET=your-azure-client-secret
AZURE_STORAGE_ACCOUNT=healthcaredataplatform
AZURE_STORAGE_CONTAINER=raw-data

# GCP Configuration (if using GCP)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
GCP_PROJECT_ID=your-gcp-project-id
GCS_BUCKET=healthcare-data-platform

# Notification Configuration
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
EMAIL_SMTP_SERVER=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_USERNAME=alerts@healthcare.com
EMAIL_PASSWORD=your-email-password

# Security Keys
ENCRYPTION_KEY=your-32-byte-encryption-key-here
JWT_SECRET_KEY=your-jwt-secret-key

# Application Configuration
ENVIRONMENT=development  # development, staging, production
LOG_LEVEL=INFO
DEBUG=false

# Dashboard Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost
DASHBOARD_REFRESH_INTERVAL=30

# Monitoring Configuration
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000

# Database Configuration (for metadata storage)
METADATA_DB_HOST=localhost
METADATA_DB_PORT=5432
METADATA_DB_NAME=healthcare_metadata
METADATA_DB_USER=healthcare_user
METADATA_DB_PASSWORD=your-db-password

# Healthcare Specific Configuration
HIPAA_COMPLIANCE_MODE=true
PHI_ENCRYPTION_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=2555  # 7 years

# Cost Management
COST_ALERT_THRESHOLD=1000  # USD per month
BUDGET_LIMIT=5000         # USD per month

# Performance Tuning
SPARK_EXECUTOR_MEMORY=16g
SPARK_DRIVER_MEMORY=8g
SPARK_EXECUTOR_CORES=4
SPARK_SERIALIZER=org.apache.spark.serializer.KryoSerializer